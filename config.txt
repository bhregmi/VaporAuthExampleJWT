import Fluent
import FluentSQLiteDriver
import Vapor
import SwiftOracle
import Leaf
import JWT


// configures your application
public func configure(_ app: Application) throws {
    // uncomment to serve files from /Public folder
    // app.middleware.use(FileMiddleware(publicDirectory: app.directory.publicDirectory))
    
    // Imported config features from https://github.com/bhregmi/vapor-oracle.git
     
     let port: Int = 8080
     app.http.server.configuration.port = port
     
     // register Database connection pool
     let tnsName: String = Environment.get("TNS_NAME") ?? "default_tns_alias"
     let dbUser: String = Environment.get("DATABASE_USER") ?? "default_user_name"
     let dbPassword: String = Environment.get("DATABASE_PASSW") ?? "default_password"
     let maxConn: Int = Int( Environment.get("ORAPOOL_MAXCONN") ?? "3" ) ?? 3
     
     app.oraConnPool = OraConnectionPool(tnsAlias: tnsName, username: dbUser, password: dbPassword, maxConn: maxConn)!
     app.oraConnPool.pool.statementCacheSize = 10
     app.routes.defaultMaxBodySize = "10mb"
     app.http.server.configuration.responseCompression = .enabled
     app.http.server.configuration.requestDecompression = .enabled
    
    // register Middlewares
    app.middleware.use(app.sessions.middleware)
    app.middleware.use(UserSessionAuthenticator())
    
    // Add HMAC with SHA-256 signer. This generates the token for the keyword "secret"
    app.jwt.signers.use(.hs256(key: "secret"))
    

//    app.databases.use(.sqlite(.file("db.sqlite")), as: .sqlite)
//
//    app.migrations.add(CreateTodo())
    
    // register leaf
    app.views.use(.leaf)

    // register routes
    try routes(app)
}
